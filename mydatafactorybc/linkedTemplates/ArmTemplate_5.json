{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mydatafactorybc"
		},
		"Trigger_mp1_properties_pipeline_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"trigger_for_handy_candy_parquet_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/7da6867f-3619-473d-8729-3dfcc82da694/resourceGroups/Az900/providers/Microsoft.Storage/storageAccounts/mynewstorageacctdb"
		},
		"trigger_desserts4all_new_csv_file_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/7da6867f-3619-473d-8729-3dfcc82da694/resourceGroups/rg-dataengrbootcamp/providers/Microsoft.Storage/storageAccounts/sacproject9"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Bronze to Silver')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_dessert4all_parquet",
								"type": "DatasetReference"
							},
							"name": "Desserts4allParquet"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_desserts4all_clean_silver",
								"type": "DatasetReference"
							},
							"name": "Destination"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesMonth as string,",
						"          Retailer as string,",
						"          Product as string,",
						"          SalesValueUSD as float,",
						"          UnitsSold as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> Desserts4allParquet",
						"Desserts4allParquet derive(Revenue = SalesValueUSD*UnitsSold) ~> DerivedColumn",
						"DerivedColumn sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['cleaned_desserts4all.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Destination"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow Cleaned Silver to Gold')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_desserts4all_clean_silver",
								"type": "DatasetReference"
							},
							"name": "CleanedDessert4all"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable8",
								"type": "DatasetReference"
							},
							"name": "sqlpool"
						}
					],
					"transformations": [
						{
							"name": "AggregateTotalRevenue"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesMonth as string,",
						"          Retailer as string,",
						"          Product as string,",
						"          SalesValueUSD as float,",
						"          UnitsSold as integer,",
						"          Revenue as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> CleanedDessert4all",
						"CleanedDessert4all aggregate(groupBy(Product),",
						"     Revenue = sum(Revenue)) ~> AggregateTotalRevenue",
						"AggregateTotalRevenue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sqlpool"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_for_jollygood')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_jollygood_xlsx",
								"type": "DatasetReference"
							},
							"name": "SourceJollyGoodxsl",
							"description": "Transforming Jolly Good excel file using a lookup reference file."
						},
						{
							"linkedService": {
								"referenceName": "ADLS linked service",
								"type": "LinkedServiceReference"
							},
							"name": "ExchangeRateJollyGood"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_sales_xlsx_sales_table",
								"type": "DatasetReference"
							},
							"name": "SinkToSalesLoadTable"
						}
					],
					"transformations": [
						{
							"name": "FilterOutMonthTotal"
						},
						{
							"name": "FilterCurrencytoUSD"
						},
						{
							"name": "lookupExchangeRates"
						},
						{
							"name": "derivedColumnTotalSales"
						},
						{
							"name": "SelectRequiredColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Period as date,",
						"          Product as string,",
						"          {Unit Price} as double,",
						"          Currency as string,",
						"          {Units Sold} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SourceJollyGoodxsl",
						"source(output(",
						"          FromCurrency as string,",
						"          ToCurrency as string,",
						"          Date as date,",
						"          ExchangeRate as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'excel',",
						"     fileSystem: 'source',",
						"     folderPath: 'landing/Azure-Data-Factory-datasets/Azure-Data-Factory-by-Example-Second-Edition-main/SampleData',",
						"     fileName: 'ExchangeRates.xlsx',",
						"     sheetName: 'Sheet1',",
						"     firstRowAsHeader: true) ~> ExchangeRateJollyGood",
						"SourceJollyGoodxsl filter(Product!='Month Total') ~> FilterOutMonthTotal",
						"ExchangeRateJollyGood filter(ToCurrency=='USD') ~> FilterCurrencytoUSD",
						"FilterOutMonthTotal, FilterCurrencytoUSD lookup(Period == Date",
						"     && Currency == FromCurrency,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupExchangeRates",
						"lookupExchangeRates derive(SalesValueUSD = {Unit Price}*ExchangeRate*{Units Sold}) ~> derivedColumnTotalSales",
						"derivedColumnTotalSales select(mapColumn(",
						"          Product,",
						"          {Unit Price},",
						"          {Units Sold},",
						"          Date,",
						"          SalesValueUSD",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectRequiredColumns",
						"SelectRequiredColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          RowId as integer,",
						"          Retailer as string,",
						"          SalesMonth as date,",
						"          Product as string,",
						"          ManufacturerProductCode as string,",
						"          SalesValueUSD as decimal(18,2),",
						"          UnitsSold as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          SalesMonth = Date,",
						"          Product,",
						"          SalesValueUSD,",
						"          UnitsSold = {Units Sold}",
						"     )) ~> SinkToSalesLoadTable"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate_sales_to_Gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data Flow Silver to Gold",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow Cleaned Silver to Gold",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CleanedDessert4all": {},
									"sqlpool": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_for_staging",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines with Triggers"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataflow Cleaned Silver to Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Aggregate_Sales_To_Gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data Flow Silver To Gold",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow Cleaned Silver to Gold",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CleanedDessert4all": {},
									"sqlpool": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "ls_for_staging",
									"type": "LinkedServiceReference"
								},
								"folderPath": "staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines with Triggers"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataflow Cleaned Silver to Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pl_Transform_Sales_To_Silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Bronze to Silver",
				"activities": [
					{
						"name": "Data Flow Bronze To Silver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Bronze to Silver",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Desserts4allParquet": {},
									"Destination": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines with Triggers"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Bronze to Silver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_sales_excelfile_to_sales_load_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Salesxlsxfiletosqldb",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_for_jollygood",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SourceJollyGoodxsl": {},
									"ExchangeRateJollyGood": {},
									"SinkToSalesLoadTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-07-12T19:21:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_for_jollygood')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_mp1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "CopyPipelineDessert4all",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowStart": {
							"type": "Expression",
							"value": "[parameters('Trigger_mp1_properties_pipeline_parameters_windowStart')]"
						}
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-07-15T16:23:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_for_handy_candy_parquet')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_copyfile_using_storage_events_trigger",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/parquet-staging/blobs/handy",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_for_handy_candy_parquet_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Sales_To_Gold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_Ingest_Sales_To_Bronze",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_Ingest_Sales_To_Bronze",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Pl_Transform_Sales_To_Silver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_Ingest_Sales_To_Bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pl_Transform_Sales_To_Silver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Pl_Aggregate_Sales_To_Gold",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Pl_Transform_Sales_To_Silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pl_Aggregate_Sales_To_Gold",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines with Triggers"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pl_Transform_Sales_To_Silver')]",
				"[concat(variables('factoryId'), '/pipelines/Pl_Aggregate_Sales_To_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_Ingest_Sales_To_Bronze_copy_ORIGINAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Automated Pipeline that ingests raw data, cleans and enriches it using data flow mapping and loads it into curated gold layer tables in Synapse Analytics",
				"activities": [
					{
						"name": "Copy Desserts4all Landing to Bronze",
						"description": "copy Desserts4all CSV files to Bronze Container using a storage event trigger with logging enable in landing container",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "desserts4all",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ls_sacproject9",
										"type": "LinkedServiceReference"
									},
									"path": "landing"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_dessert4all",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_dessert4all_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pl_Transform_Sales_To_Silver",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy Desserts4all Landing to Bronze",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pl_Transform_Sales_To_Silver",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Pipeline_Sales_To_Gold",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Pl_Transform_Sales_To_Silver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pipeline_Sales_To_Gold",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pipelines with Triggers"
				},
				"annotations": [],
				"lastPublishTime": "2025-07-15T14:37:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pl_Transform_Sales_To_Silver')]",
				"[concat(variables('factoryId'), '/pipelines/Pipeline_Sales_To_Gold')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_desserts4all_new_csv_file')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_Ingest_Sales_To_Bronze",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "pl_Ingest_Sales_To_Bronze_copy_ORIGINAL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/",
					"blobPathEndsWith": "20.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_desserts4all_new_csv_file_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_Ingest_Sales_To_Bronze_copy_ORIGINAL')]"
			]
		}
	]
}